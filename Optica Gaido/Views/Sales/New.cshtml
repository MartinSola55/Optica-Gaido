@model Optica_Gaido.Models.ViewModels.Sales.NewViewModel

@{
    ViewData["Title"] = "Nueva venta";
}

<!-- Styles -->
<link href="~/lib/datatables/media/css/dataTables.bootstrap4.css" rel="stylesheet" />
<link href="~/lib/icheck/skins/all.css" rel="stylesheet" />
<link href="~/lib/wizard/steps.css" rel="stylesheet" />
<!-- Switchery -->
<link href="~/lib/switchery/dist/switchery.min.css" rel="stylesheet" />
<!-- Datepicker -->
<link href="~/lib/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" rel="stylesheet">

<!-- Switchery -->
<script src="~/lib/switchery/dist/switchery.min.js"></script>
<!-- Datepicker -->
<script src="~/lib/moment/moment-with-locales.js"></script>
<script src="~/lib/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js"></script>
<!-- Editable -->
<script src="~/lib/jquery-datatables-editable/jquery.dataTables.js"></script>
<script src="~/lib/datatables/datatables.min.js"></script>
<script src="~/lib/tiny-editable/mindmup-editabletable.js"></script>
<script src="~/lib/tiny-editable/numeric-input-validation.js"></script>
<!-- icheck -->
<script src="~/lib/icheck/icheck.min.js"></script>
<script src="~/lib/icheck/icheck.init.js"></script>
<!-- Steps -->
<script src="~/lib/wizard/jquery.steps.min.js"></script>

<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class="row page-titles">
        <div class="col-md-5 col-8 align-self-center">
            <h3 class="text-themecolor m-b-0 m-t-0">Ventas</h3>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Inicio</a></li>
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Sales" asp-action="Index">Ventas</a></li>
                <li class="breadcrumb-item active">Nueva</li>
            </ol>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body wizard-content">
                    <h4 class="card-title">Nueva venta</h4>
                    <h6 class="card-subtitle mb-0">@DateTime.UtcNow.AddHours(-3).ToString("dd/MM/yyyy")</h6>
                    <form asp-area="" asp-controller="Sales" asp-action="Create" class="tab-wizard wizard-circle" id="form_data">
                        <input asp-for="CreateViewModel.ClientID" value="@Model.Client.ID" type="hidden"/>
                        <!-- Step 1 -->
                        <h6>Cliente</h6>
                        <section>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-body">
                                        <h3 class="box-title">Cliente</h3>
                                        <hr class="m-t-0 m-b-20">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    <label class="control-label text-md-right col-5">Nombre:</label>
                                                    <div class="col-7 pr-0">
                                                        <p class="form-control-static">@Html.DisplayFor(x => x.Client.Name)</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--/span-->
                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    <label class="control-label text-md-right col-5">Apellido:</label>
                                                    <div class="col-7 pr-0">
                                                        <p class="form-control-static">@Html.DisplayFor(x => x.Client.Surname)</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--/span-->
                                        </div>
                                        <!--/row-->
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    <label class="control-label text-md-right col-5">Teléfono:</label>
                                                    <div class="col-7 pr-0">
                                                        <p class="form-control-static">@Html.DisplayFor(x => x.Client.Phone)</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--/span-->
                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    <label class="control-label text-md-right col-5">Dirección:</label>
                                                    <div class="col-7 pr-0">
                                                        <p class="form-control-static">@Html.DisplayFor(x => x.Client.Adress)</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--/span-->
                                        </div>
                                        <!--/row-->
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    <label class="control-label text-md-right col-5">@(Model.Client.Debt >= 0 ? "Deuda" : "Saldo a favor:")</label>
                                                    <div class="col-7 pr-0">
                                                        <p class="form-control-static">$@(Model.Client.Debt >= 0 ? Model.Client.Debt.ToString("F0") : (-Model.Client.Debt).ToString("F0"))</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--/span-->
                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    <label class="control-label text-md-right col-5">Obra social:</label>
                                                    <div class="col-7 pr-0">
                                                        <p class="form-control-static">@Html.DisplayFor(x => x.Client.HealthInsurance.Name)</p>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--/span-->
                                        </div>
                                        <!--/row-->
                                    </div>
                                </div>
                            </div>
                        </section>
                        <!-- Step 2 -->
                        <h6>Datos</h6>
                        <section>
                            <h3 class="box-title">Datos</h3>
                            <hr class="m-t-0 m-b-20">
                            <div class="row col-12 m-0 p-0">

                                <!-- Precio -->
                                <div class="col-12 col-sm-6 col-lg-3 col-xxl-3 mb-3">
                                    <label asp-for="CreateViewModel.Price" class="mb-0"></label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">$</span>
                                        </div>
                                        <input asp-for="CreateViewModel.Price" class="form-control" type="number" data-val-number="Debes ingresar un número" />
                                    </div>
                                    <span asp-validation-for="CreateViewModel.Price" class="text-danger"></span>
                                </div>

                                <!-- Seña -->
                                <div class="col-12 col-sm-6 col-lg-3 col-xxl-3 mb-3">
                                    <label asp-for="CreateViewModel.Deposit" class="mb-0"></label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">$</span>
                                        </div>
                                        <input asp-for="CreateViewModel.Deposit" class="form-control" type="number" data-val-number="Debes ingresar un número" />
                                    </div>
                                    <span asp-validation-for="CreateViewModel.Deposit" class="text-danger"></span>
                                </div>

                                <!-- Tipo -->
                                <div class="col-6 col-lg-3 col-xxl-2 mb-3 d-flex justify-content-center align-items-center">
                                    <ul class="icheck-list p-0">
                                        @foreach (var item in Model.GlassTypes)
                                        {
                                            <li>
                                                <input type="radio" asp-for="CreateViewModel.GlassTypeID" value="@item.ID" id="type_@(item.ID)" class="check" data-radio="iradio_square-purple" />
                                                <label for="type_@item.ID" class="mb-0" style="cursor: pointer">@item.Name</label>
                                            </li>
                                        }
                                    </ul>
                                    <span asp-validation-for="CreateViewModel.GlassTypeID" class="text-danger"></span>
                                </div>

                                <!-- AR -->
                                <div class="col-6 col-lg-3 col-xxl-2 mb-3 d-flex justify-content-center align-items-center">
                                    <input asp-for="CreateViewModel.IsAr" class="js-switch" data-color="#009efb" />
                                    <label asp-for="CreateViewModel.IsAr" class="mb-0 ml-2"></label>
                                    <span asp-validation-for="CreateViewModel.IsAr" class="text-danger"></span>
                                </div>

                                <!-- Altura película -->
                                <div class="col-12 col-sm-6 col-lg-4 col-xl-4 col-xxl-2 mb-3">
                                    <label asp-for="CreateViewModel.MovieHeight" class="mb-0"></label>
                                    <div class="input-group">
                                        <input asp-for="CreateViewModel.MovieHeight" class="form-control" type="number" data-val-number="Debes ingresar un número" />
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0 px-1">mm</span>
                                        </div>
                                    </div>
                                    <span asp-validation-for="CreateViewModel.MovieHeight" class="text-danger"></span>
                                </div>

                                <!-- Color -->
                                <div class="col-12 col-sm-6 col-lg-4 col-xxl-3 mb-3">
                                    <label asp-for="CreateViewModel.GlassColorID" class="mb-0"></label>
                                    @Html.DropDownListFor(x => x.CreateViewModel.GlassColorID, Model.GlassColors, null, new { @class = "form-control" })
                                    <span asp-validation-for="CreateViewModel.GlassColorID" class="text-danger"></span>
                                </div>

                                <!-- DIP -->
                                <div class="col-12 col-sm-6 col-lg-4 col-xxl-3 mb-3">
                                    <label asp-for="CreateViewModel.Dip" class="mb-0"></label>
                                    <input asp-for="CreateViewModel.Dip" class="form-control" />
                                    <span asp-validation-for="CreateViewModel.Dip" class="text-danger"></span>
                                </div>

                                <!-- Vendedor -->
                                <div class="col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 col-xxl-3 mb-3">
                                    <label asp-for="CreateViewModel.SellerID" class="mb-0"></label>
                                    @Html.DropDownListFor(x => x.CreateViewModel.SellerID, Model.Sellers, null, new { @class = "form-control" })
                                    <span asp-validation-for="CreateViewModel.SellerID" class="text-danger"></span>
                                </div>

                                <!-- Doctor -->
                                <div class="col-12 col-lg-6 col-xxl-3 mb-3">
                                    <label asp-for="CreateViewModel.DoctorID" class="mb-0"></label>
                                    @Html.DropDownListFor(x => x.CreateViewModel.DoctorID, Model.Doctors, null, new { @class = "form-control" })
                                    <span asp-validation-for="CreateViewModel.DoctorID" class="text-danger"></span>
                                </div>

                                <!-- Date -->
                                <div class="col-12 col-md-6 col-lg-4 col-xxl-3 mb-3">
                                    <label asp-for="CreateViewModel.DeliveryDateString" class="mb-0"></label>
                                    <input asp-for="CreateViewModel.DeliveryDateString" class="form-control" type="text" placeholder="dd/mm/aaaa" />
                                    <span asp-validation-for="CreateViewModel.DeliveryDateString" class="text-danger"></span>
                                </div>

                                <!-- Observation -->
                                <div class="col-12 col-md-6 col-lg-5 col-xxl-4 mb-3">
                                    <label asp-for="CreateViewModel.Observation" class="mb-0"></label>
                                    <textarea asp-for="CreateViewModel.Observation" class="form-control" style="height: 100px"></textarea>
                                    <span asp-validation-for="CreateViewModel.Observation" class="text-danger"></span>
                                </div>
                            </div>
                        </section>
                        <!-- Step 3 -->
                        <h6>Formato</h6>
                        <section>
                            <h3 class="box-title">Formato</h3>
                            <hr class="m-t-0 m-b-20">
                            <div class="row col-12 m-0 p-0">
                                <div class=" table-responsive">
                                    <table id="formatsTable" class="table table-bordered editable-table">
                                        <thead>
                                            <tr>
                                                <th class="col-3">Visión</th>
                                                <th class="col-3"></th>
                                                <th class="col-2">Esf.</th>
                                                <th class="col-2">Cil.</th>
                                                <th class="col-2">Eje</th>
                                            </tr>
                                        </thead>
                                        <tbody>            
                                            <tr>
                                                <td rowspan="2" style="cursor: default">Lejos</td>
                                                <td style="cursor: default">Derecho</td>
                                                <td class="validateCol column1"></td>
                                                <td class="validateCol column2"></td>
                                                <td class="validateCol column3"></td>
                                            </tr>
                                            <tr>
                                                <td style="cursor: default">Izquierdo</td>
                                                <td class="validateCol column1"></td>
                                                <td class="validateCol column2"></td>
                                                <td class="validateCol column3"></td>
                                            </tr>
                                            <tr>
                                                <td rowspan="2" style="cursor: default">Cerca</td>
                                                <td style="cursor: default">Derecho</td>
                                                <td class="validateCol column1"></td>
                                                <td class="validateCol column2"></td>
                                                <td class="validateCol column3"></td>
                                            </tr>
                                            <tr>
                                                <td style="cursor: default">Izquierdo</td>
                                                <td class="validateCol column1"></td>
                                                <td class="validateCol column2"></td>
                                                <td class="validateCol column3"></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </section>
                        <!-- Step 4 -->
                        <h6>Marco</h6>
                        <section>
                            <h3 class="box-title">Marco</h3>
                            <hr class="m-t-0 m-b-20">
                            <div class="row col-12 m-0 p-0">

                                <div class="table-responsive">
                                    <table id="DataTable" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th class="col-4">Modelo</th>
                                                <th class="col-3">Marca</th>
                                                <th class="col-3">Material</th>
                                                <th class="col-2">Seleccionar</th>
                                            </tr>
                                        </thead>
                                        <tbody id="table_body">
                                            @foreach (var item in Model.Frames)
                                            {
                                                <tr data-id="@item.ID">
                                                    <td>@Html.DisplayFor(c => item.Model)</td>
                                                    <td>@Html.DisplayFor(c => item.Brand.Name)</td>
                                                    <td>@Html.DisplayFor(c => item.Material.Description)</td>
                                                    <td class="text-center">
                                                        <input type="radio" asp-for="CreateViewModel.FrameID" value="@item.ID" id="frame_@(item.ID)" class="check" data-radio="iradio_square-purple" />
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </section>
                        <!-- Step 5 -->
                        <h6>Métodos de pago</h6>
                        <section>
                            <h3 class="box-title">Métodos de pago</h3>
                            <hr class="m-t-0 m-b-20">
                            <div class="row col-12 m-0 p-0">
                                @foreach (var item in Model.SalePaymentMethods)
                                {
                                    <div class="col-12 col-md-6 col-xxl-4 mb-3">
                                        <label>@(item.PaymentMethod.Name)</label>
                                        <div class="d-flex flex-row align-items-center">
                                            <input type="checkbox" data-id="@item.PaymentMethod.ID" class="js-switch payment_method_checkbox col-4" data-color="#009efb" />
                                            <div class="input-group col-8">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">$</span>
                                                </div>
                                                <input name="SalePaymentMethod.Amount" data-id="@item.PaymentMethod.ID" class="form-control payment_method" disabled min="0" type="number" data-val-number="Debes ingresar un número" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </section>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    #DataTable_wrapper > div:nth-child(2) > div > div > div.dataTables_scrollHead > div,
    #DataTable_wrapper > div:nth-child(2) > div > div > div.dataTables_scrollHead > div > table {
        width: 100% !important;
    }
</style>


<script>
    $(document).ready(function () {
        $('#formatsTable').editableTableWidget().numericInputExample();

        $("#formatsTable tbody tr td").on("click", function () {
            if (!$(this).hasClass("validateCol")) {
                $(this).blur();
            }
        });

        $('#DataTable').DataTable({
            scrollY: '30vh',
            scrollCollapse: true,
            paging: false,
            "language": {
                "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ marcos",
                "sInfoEmpty": "Mostrando 0 a 0 de 0 marcos",
                "sInfoFiltered": "(filtrado de _MAX_ marcos en total)",
                "emptyTable": 'No hay marcos que coincidan con la búsqueda',
                "sLengthMenu": "Mostrar _MENU_ marcos",
                "sSearch": "Buscar:",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior",
                },
            },
        });
        $('.js-switch').each(function () {
            new Switchery($(this)[0], $(this).data());
        });
    });
    $(".tab-wizard").steps({
        headerTag: "h6"
        , bodyTag: "section"
        , transitionEffect: "fade"
        , titleTemplate: '<span class="step">#index#</span> #title#'
        , labels: {
            cancel: "Cancelar",
            next: "Siguiente",
            previous: "Anterior",
            finish: "Vender",
        }
        , onFinished: function (event, currentIndex) {
            if (validateData()) {
                sendForm();
            }
        }
    });

    $(document).ready(function () {
        // Establecer el idioma de Moment.js en español
        moment.locale('es');

        // Configurar bootstrapMaterialDatePicker con el formato y opciones deseadas
        $('#CreateViewModel_DeliveryDateString').bootstrapMaterialDatePicker({
            minDate: moment(),
            time: false,
            format: 'DD/MM/YYYY',
            cancelText: 'Cancelar',
            weekStart: 1,
            lang: 'es',
        });
    });
</script>

<script>
    $('form select').each(function () {
        $(this).val($(this).find('option:first').val());
    });

    $('form .payment_method').each(function () {
        $(this).val("");
    });
    
    $('form .payment_method_checkbox').on("change", function () {
        let checkbox = $(this);
        let input = checkbox.closest(".d-flex").find(".payment_method");

        // Habilitar o deshabilitar el input según el estado del checkbox
        if (checkbox.is(":checked")) {
            input.prop("disabled", false);
        } else {
            input.prop("disabled", true);
        }
    });

    const fireAlert = (text) => {
        Swal.fire({
            icon: 'warning',
            title: 'ALERTA',
            text: text,
            showCancelButton: false,
            confirmButtonColor: '#1e88e5',
            confirmButtonText: 'OK',
            allowOutsideClick: false,
        });
        return false;
    };

    let paymentMethodsData;
    function validatePaymentMethods() {
        // Obtener los métodos de pago seleccionados
        let paymentMethods = [];
        $(".payment_method_checkbox:checked").each(function () {
            let checkbox = $(this);
            let payment_method_id = checkbox.data("id");
            let amount = $(`input[data-id='${payment_method_id}'][type='number']`).val();
            if (amount !== "" && amount != null) {
                let paymentMethod = {
                    PaymentMethodID: payment_method_id,
                    Amount: amount
                };
                paymentMethods.push(paymentMethod);
            }
        });

        // Crear un objeto que contenga los métodos de pago y sus cantidades
        paymentMethodsData = {
            CreateViewModel: {
                SalePaymentMethods: paymentMethods
            }
        };
        if (paymentMethods.length <= 0) return fireAlert("Debes ingresar al menos un método de pago");

        return true;
    }

    function validateSale() {
        let price = $("input[name='CreateViewModel.Price']").val();
        let deposit = $("input[name='CreateViewModel.Deposit']").val();
        let glassType = $('.icheck-list input[type="radio"]').filter(':checked');
        let glassColor = $("select[name='CreateViewModel.GlassColorID']").val();
        let movieHeight = $("input[name='CreateViewModel.MovieHeight']").val();
        let dip = $("input[name='CreateViewModel.Dip']").val();
        let seller = $("select[name='CreateViewModel.SellerID']").val();
        let doctor = $("select[name='CreateViewModel.DoctorID']").val();
        let date = $("input[name='CreateViewModel.DeliveryDateString']").val();

        if (price == "" || isNaN(parseInt(price))) return fireAlert("Debes ingresar un precio");
        if (deposit.length > 0 && isNaN(parseInt(deposit))) return fireAlert("Debes ingresar una seña válida");
        if (glassType.length <= 0) return fireAlert("Debes ingresar tipo de vidrio");
        if (glassColor == null) return fireAlert("Debes ingresar un color de vidrio");
        if (movieHeight == "" || isNaN(parseInt(movieHeight))) return fireAlert("Debes ingresar una altura de película");
        if (dip == "") return fireAlert("Debes ingresar una distancia interpupilar");
        if (seller == null) return fireAlert("Debes ingresar un vendedor/a");
        if (doctor == null) return fireAlert("Debes ingresar un médico");
        if (date == "") return fireAlert("Debes ingresar una fecha de entrega");

        return true;
    }

    let formatsData;
    function validateFormats() {
        let formats = [];
        let valid = true;
        // Obtener los valores de las columnas 3, 4 y 5 de todas las filas
        $('#formatsTable tbody tr').each(function (index) {
            let $row = $(this);
            let rowNumber = index + 1;
            let esferic = $row.find('td.column1').text().trim();
            let cilindric = $row.find('td.column2').text().trim();
            let axis = $row.find('td.column3').text().trim();

            // Validar que ninguna de las tres columnas esté vacía en una fila
            if ((esferic != '' && (cilindric == '' || axis == '')) ||
                (cilindric != '' && (esferic == '' || axis == '')) ||
                (axis != '' && (esferic == '' || cilindric == ''))) {
                valid = false;
                return false;
            }

            // Agregar los valores al arreglo
            if (esferic != '' && cilindric != '' && axis != '' && esferic != null && cilindric != null && axis != null) {
                formats.push({
                    Distance: rowNumber > 2 ? 1 : 2, // 1=Cerca 2=Lejos
                    Eye: (index % 2 === 0) ? 1 : 2, // 1=Derecho 2=Izquierdo
                    Esferic: esferic,
                    Cilindric: cilindric,
                    Axis: axis
                });
            }
        });

        if (valid === false) return fireAlert("Alguna de las filas del formato no está completa");


        formatsData = {
            CreateViewModel: {
                GlassFormats: formats
            }
        };

        // Validar que exista al menos una fila completa
        if (formats.length <= 0) {
            return fireAlert("Debes completar al menos una fila del formato");
        }

        return true;
    }

    function validateData() {
        if (!validateSale()) return false;
        if (!validateFormats()) return false;
        //if (!validateFrame()) return false;
        if (!validatePaymentMethods()) return false;
        return true;
    }

    function formatUTCDate(dateString) {
        let parts = dateString.split('/');
        console.log(parts);
        let formattedDate = parts[1] + '/' + parts[0] + '/' + parts[2];
        return formattedDate;
    }

    function sendForm() {
        let form = $("#form_data");

        // Enviar solicitud AJAX
        $.ajax({
            url: $(form).attr('action'), // Utiliza la ruta del formulario
            method: $(form).attr('method'), // Utiliza el método del formulario
            data: $(form).serialize() + "&" + $.param(paymentMethodsData) + "&" + $.param(formatsData), // Utiliza los datos del formulario
            success: function (response) {
                Swal.fire({
                    title: response.message,
                    icon: 'success',
                    showCancelButton: false,
                    confirmButtonColor: '#1e88e5',
                    confirmButtonText: 'OK',
                    allowOutsideClick: false,
                })
                .then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = window.location.origin;
                    }
                });
            },
            error: function (errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: errorThrown.responseJSON.title,
                    text: errorThrown.responseJSON.message,
                    confirmButtonColor: '#1e88e5',
                });
            }
        });
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>