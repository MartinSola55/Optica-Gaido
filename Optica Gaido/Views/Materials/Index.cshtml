@model Optica_Gaido.Models.ViewModels.Materials.IndexViewModel

@{
    ViewData["Title"] = "Materiales";
}

<!-- Data table -->
<link href="~/lib/datatables/media/css/dataTables.bootstrap4.css" rel="stylesheet">

<!-- This is data table -->
<script src="~/lib/datatables/datatables.min.js"></script>

<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class="row page-titles">
        <div class="col-md-5 col-8 align-self-center">
            <h3 class="text-themecolor m-b-0 m-t-0">Materiales</h3>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Inicio</a></li>
                <li class="breadcrumb-item active">Materiales</li>
            </ol>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <!-- Modal -->
    <div id="modalCreate" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
        <div id="formContainer" class="modal-dialog">
            <form role="form" class="" method="POST" asp-area="" asp-controller="Materials" asp-action="Create" id="form-create" autocomplete="off">
                <input type="hidden" name="CreateViewModel.ID" value="" />
                @Html.AntiForgeryToken()
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 id="modalTitle" class="modal-title"></h4>
                        <button type="button" class="close" id="btnCloseModalCreate" data-dismiss="modal" aria-hidden="true">×</button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="form-column">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <div class="col-12 mb-3">
                                        <label asp-for="CreateViewModel.Description" class="mb-0"></label>
                                        <input asp-for="CreateViewModel.Description" class="form-control" placeholder="Ingrese una descripción" required />
                                        <span asp-validation-for="CreateViewModel.Description" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Cerrar</button>
                        <button id="btnSendModal" type="submit" class="btn btn-success waves-effect waves-light">Agregar</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!-- End Modal -->

    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <div class="d-flex flex-row justify-content-between">
                        <h2 class="card-title">Listado de materiales</h2>
                        <button id="btnAdd" type="button" class="btn btn-info btn-rounded waves-effect waves-light m-t-10 float-right" data-toggle="modal" data-target="#modalCreate">Agregar material</button>
                    </div>
                    <div class="table-responsive m-t-10">
                        <table id="DataTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th class="col-8">Descripción</th>
                                    <th class="col-2">Habilitada</th>
                                    <th class="col-2">Acción</th>
                                </tr>
                            </thead>
                            <tbody id="table_body">
                                @foreach (var item in Model.Materials)
                                {
                                    <tr data-id="@item.ID">
                                        <td>
                                            @Html.DisplayFor(c => item.Description)
                                        </td>
                                        <td class="text-center">
                                            @{
                                                if (item.IsActive)
                                                {
                                                    <i class="bi bi-check2" style="font-size: 1.5rem"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-x-lg" style="font-size: 1.3rem"></i>
                                                }
                                            }
                                        </td>
                                        <td class='d-flex flex-row justify-content-center'>
                                            <button type='button' class='btn btn-outline-info btn-rounded btn-sm mr-2' onclick='edit(@Json.Serialize(item))' data-toggle="modal" data-target="#modalCreate"><i class="bi bi-pencil"></i></button>
                                            <button type='button' class='btn @(item.IsActive ? "btn-danger" : "btn-info") btn-rounded btn-sm ml-2' onclick='changeState(@item.ID, "@item.IsActive")'><i class='bi @(item.IsActive ? "bi-toggle-on" : "bi-toggle-off")'></i></button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <form id="form-state" method="POST" asp-area="" asp-controller="Materials" asp-action="ChangeState">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="">
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function fillTable(item) {
        let active = "";
        let btn = "";
        if (item.isActive) {
            active = `<i class="bi bi-check2" style="font-size: 1.5rem"></i>`;
            btn = `<button type='button' class='btn btn-danger btn-rounded btn-sm ml-2' onclick='changeState(${item.id}, "${item.isActive}")'><i class='bi bi-toggle-on'></i></button>`;
        } else {
            active = `<i class="bi bi-x-lg" style="font-size: 1.3rem"></i>`;
            btn = `<button type='button' class='btn btn-info btn-rounded btn-sm ml-2' onclick='changeState(${item.id}, "${item.isActive}")'><i class='bi bi-toggle-off'></i></button>`;
        }
        let content = `
                <tr data-id='${item.id}'>
                    <td>${item.description}</td>
                    <td class='text-center'>${active}</td>
                    <td class='d-flex flex-row justify-content-center'>
                        <button type='button' class='btn btn-outline-info btn-rounded btn-sm mr-2' onclick='edit(${item})' data-toggle="modal" data-target="#modalCreate"><i class="bi bi-pencil"></i></button>
                        ${btn}
                    </td>
                </tr>`;
        $('#DataTable').DataTable().row.add($(content)).draw();
    }

    function removeFromTable(id) {
        $('#DataTable').DataTable().row(`[data-id="${id}"]`).remove().draw();
    }

    function changeState(id, isActive) {
        let title = "";
        if (isActive === "True" || isActive === "true") {
            title = "¿Seguro deseas dar de baja este material?";
        } else {
            title = "¿Seguro deseas dar de alta este material?";
        }
        Swal.fire({
            title: title,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Confirmar',
            buttonsStyling: false,
            customClass: {
                confirmButton: 'btn btn-warning waves-effect waves-light px-3 py-2',
                cancelButton: 'btn btn-default waves-effect waves-light px-3 py-2'
            }
        })
            .then((result) => {
                if (result.isConfirmed) {
                    $("#form-state input[name='id']").val(id);
                    sendForm("state");
                }
            });
    }

    function sendForm(action) {
        let form = document.getElementById(`form-${action}`);

        let errors = $(".input-validation-error");

        if (errors.length === 0) {
            // Enviar solicitud AJAX
            $.ajax({
                url: $(form).attr('action'), // Utiliza la ruta del formulario
                method: $(form).attr('method'), // Utiliza el método del formulario
                data: $(form).serialize(), // Utiliza los datos del formulario
                success: function (response) {
                    $("#btnCloseModalCreate").click();
                    Swal.fire({
                        icon: 'success',
                        title: response.message,
                        confirmButtonColor: '#1e88e5',
                    });
                    if (action === 'create') {
                        fillTable(response.data);
                    } else {
                        removeFromTable(response.data.id);
                        fillTable(response.data);
                    }
                },
                error: function (errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: errorThrown.responseJSON.title,
                        text: errorThrown.responseJSON.message,
                        confirmButtonColor: '#1e88e5',
                    });
                }
            });
        }
    }
</script>

<script>
    $("#btnAdd").on("click", function () {
        $("#modalTitle").text("Agregar material");
        $("#formContainer form").attr("action", "/Materials/Create");
        $("#formContainer form").attr("id", "form-create");
        $("#formContainer form input:not([type='hidden']").val("");
        $("input[name='CreateViewModel.ID']").prop("disabled", true);
        $("#btnSendModal").text("Agregar");

        $("#form-create").on("submit", function (e) {
            e.preventDefault();
            sendForm("create");
        })
    });

    function edit(entity) {
        $("#formContainer form input:not([type='hidden']").val("");
        $("input[name='CreateViewModel.ID']").val(entity.id);
        $("input[name='CreateViewModel.ID']").prop("disabled", false);

        $("#modalTitle").text("Editar material");
        $("#formContainer form").attr("action", "/Materials/Edit");
        $("#formContainer form").attr("id", "form-edit");
        $("#btnSendModal").text("Confirmar");

        $("input[name='CreateViewModel.Description']").val(entity.description);

        $("#form-edit").on("submit", function (e) {
            e.preventDefault();
            sendForm("edit");
        })
    }

    $('#DataTable').DataTable({
        "language": {
            "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ materiales",
            "sInfoEmpty": "Mostrando 0 a 0 de 0 materiales",
            "sInfoFiltered": "(filtrado de _MAX_ materiales en total)",
            "emptyTable": 'No hay materiales que coincidan con la búsqueda',
            "sLengthMenu": "Mostrar _MENU_ materiales",
            "sSearch": "Buscar:",
            "oPaginate": {
                "sFirst": "Primero",
                "sLast": "Último",
                "sNext": "Siguiente",
                "sPrevious": "Anterior",
            },
        },
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>